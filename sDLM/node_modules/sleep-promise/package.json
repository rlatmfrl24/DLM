{
  "_from": "sleep-promise",
  "_id": "sleep-promise@8.0.1",
  "_inBundle": false,
  "_integrity": "sha1-jXlaJ+ojlT32tSuRCB5eImZZk8U=",
  "_location": "/sleep-promise",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sleep-promise",
    "fetchSpec": "latest",
    "name": "sleep-promise",
    "raw": "sleep-promise",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sleep-promise/-/sleep-promise-8.0.1.tgz",
  "_shasum": "8d795a27ea23953df6b52b91081e5e22665993c5",
  "_shrinkwrap": null,
  "_spec": "sleep-promise",
  "_where": "C:\\Users\\2018159\\OneDrive - CyberLogitec\\git\\DLM\\sDLM",
  "author": {
    "email": "sleep-promise@jan-brummelte.de",
    "name": "Jan Brummelte",
    "url": "https://jan-brummelte.de"
  },
  "bugs": {
    "url": "https://github.com/brummelte/sleep-promise/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Resolves a promise after a specified delay.",
  "devDependencies": {
    "@babel/cli": "^7.0.0-beta.49",
    "@babel/core": "^7.0.0-beta.49",
    "@babel/preset-env": "^7.0.0-beta.49",
    "@brummelte/eslint-config": "^3.0.0",
    "babel-core": "^7.0.0-0",
    "babel-jest": "^23.0.1",
    "copyfiles": "^2.0.0",
    "coveralls": "^3.0.1",
    "eslint": "^4.19.1",
    "jest": "^23.1.0",
    "jest-junit": "^5.0.0",
    "prettier-eslint-cli": "^4.7.1",
    "rimraf": "^2.6.2",
    "rollup": "^0.60.0",
    "rollup-plugin-babel": "^4.0.0-beta.4",
    "rollup-plugin-babel-minify": "^5.0.0",
    "rollup-plugin-node-resolve": "^3.3.0",
    "typescript": "^2.9.1"
  },
  "homepage": "https://github.com/brummelte/sleep-promise",
  "jest-junit": {
    "output": "coverage/junit/js-test-results.xml"
  },
  "keywords": [
    "delay",
    "promise",
    "sleep"
  ],
  "license": "MIT",
  "main": "build/cjs.js",
  "module": "build/esm.mjs",
  "name": "sleep-promise",
  "optionalDependencies": {},
  "readme": "# sleep-promise [![License][license-image]][license-url] [![NPM version][npm-image]][npm-url] [![NPM downloads][npm-downloads-image]][npm-downloads-url] [![Build][build-image]][build-url] [![Coverage][coverage-image]][coverage-url]\n\n_sleep-promise_ resolves a promise after a specified delay.\n\n## Installation\n\n### node.js\n\n    npm install sleep-promise\n\n## Usage async / await\n\n```javascript\nimport sleep from 'sleep-promise';\n\n(async () => {\n    await sleep(2000);\n    console.log('2 seconds later …');\n})();\n```\n\n## Usage ES5\n\n```javascript\nvar sleep = require('sleep-promise');\n\nsleep(2000).then(function() {\n    console.log('2 seconds later …');\n});\n```\n\n## Usage in a promise chain\n\n```javascript\nimport sleep from 'sleep-promise';\n\nlet trace = value => {\n    console.log(value);\n    return value;\n};\n\nsleep(2000)\n    .then(() => 'hello')\n    .then(trace)\n    .then(sleep(1000))\n    .then(value => value + ' world')\n    .then(trace)\n    .then(sleep(500))\n    .then(value => value + '!')\n    .then(trace);\n\n// [2 seconds sleep]\n// hello\n// [1 second sleep]\n// hello world\n// [500 ms sleep]\n// hello world!\n```\n\n## Usage in a test file that mocks setTimeout\n\n```javascript\nimport sinon from 'sinon';\nimport sleep from 'sleep-promise';\n\nconst clock = sinon.useFakeTimers();\n\n(async () => {\n    // 2 seconds faked by sinon\n    const sleepPromise = sleep(2000);\n    clock.tick(2000);\n    await sleepPromise;\n    console.log('instant');\n\n    // Caches global setTimeout before sinon replaced it\n    const sleepPromise2 = sleep(2000, { useCachedSetTimeout: true });\n    clock.tick(2000);\n    await sleepPromise2;\n    console.log('2 seconds later');\n})();\n```\n\n## License\n\n[MIT](LICENSE.md)\n\n[license-image]: https://img.shields.io/github/license/brummelte/sleep-promise.svg\n[license-url]: https://github.com/brummelte/sleep-promise/blob/master/LICENSE.md\n[npm-image]: https://img.shields.io/npm/v/sleep-promise.svg\n[npm-url]: https://www.npmjs.com/package/sleep-promise\n[npm-downloads-image]: https://img.shields.io/npm/dm/sleep-promise.svg\n[npm-downloads-url]: https://www.npmjs.com/package/sleep-promise\n[build-image]: https://img.shields.io/circleci/project/github/brummelte/sleep-promise/master.svg\n[build-url]: https://circleci.com/gh/brummelte/sleep-promise\n[coverage-image]: https://img.shields.io/coveralls/github/brummelte/sleep-promise/master.svg\n[coverage-url]: https://coveralls.io/github/brummelte/sleep-promise?branch=master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/brummelte/sleep-promise.git"
  },
  "scripts": {
    "build": "npm run build:clean && npm run build:bundle && npm run build:types",
    "build:bundle": "rollup --config",
    "build:clean": "rimraf build",
    "build:types": "copyfiles -u 1 types/* build",
    "prepublishOnly": "npm run test && npm run build",
    "test": "npm run test:code && npm run test:eslint && npm run test:formatting && npm run test:typescript",
    "test:code": "jest",
    "test:eslint": "eslint \"lib/**/*.js\"",
    "test:formatting": "prettier-eslint --list-different \"lib/**/*.js\" \"types/**/*.d.ts\"",
    "test:typescript": "tsc"
  },
  "types": "build/cjs.d.ts",
  "version": "8.0.1"
}
